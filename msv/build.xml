<?xml version="1.0"?>
<!--
	Ant build script for MSV and related projects.
	
	$Id$
	
	
	
	Tasks to help development
	=========================
	binary
		compile everything to the bin directory.
	javadoc
		run javadoc on the working copy. Useful to check the documentation
		without actually creating a distribution package.
	test_msv
		test core msv codes. parser, verifier and several related codes.
	release
		create a distribution package of MSV
	
-->
<project name="tranquilo" basedir="." default="binary">
	
	<!-- import the global configuration file -->
	<property file="../shared/ant.config"/>
	
	
	<!-- compile Java source files -->
	<target name="binary">
		<mkdir dir="./bin"/>
		<javac
			srcdir="./src:./test"
			destdir="./bin"
			debug="on"
			optimize="off">
			
			<classpath path="../xsdlib/bin"/>
			<classpath path="../testharness/bin"/>
		</javac>
	</target>
	
	
	<!-- generate javadoc documentation from the working copy -->
	<target name="javadoc">
		<mkdir dir="./javadoc"/>
		<javadoc	locale="en_US"
					packagenames="com.sun.msv.*"
					sourcepath="./src;${rngInterfaceSource}"
					classpath="${java.class.path}"
					destdir="javadoc"
					windowtitle="Internal Use Only --- Sun Multi Schema XML Validator"
					public="yes"
					author="yes"
					overview="src/com/sun/msv/overview.html"
					>
			<link offline="true" href="http://java.sun.com/products/jdk/1.2/docs/api"
				packagelistLoc="../shared/ExternalPackageLists/CoreAPI" />
			<link offline="true" href="http://xml.apache.org/apiDocs/"
				packagelistLoc="../shared/ExternalPackageLists/XML" />
			<link offline="true" href="http://iso-relax.sourceforge.net/apiDoc/"
				packagelistLoc="../shared/ExternalPackageLists/ISO-RELAX" />
		</javadoc>
	</target>
	
	
	
	
	
	<target name="test">
		<ant antfile="../shared/ant.test.xml" target="test" />
	</target>
	
	<target name="test_release">
		<ant antfile="../shared/ant.test.xml" target="test_release">
			<property name="testJar" value="./package/msv.jar"/>
		</ant>
	</target>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- generate MSV release -->
	<target name="release">
		<tstamp />
		<property name="stageName" value="msv-${DSTAMP}" />
		
		<delete	dir="${stageName}" />
		<mkdir	dir="${stageName}" />
		<mkdir	dir="${stageName}/src" />
		<delete	dir="temp"/>
		<mkdir	dir="temp"/>
		<delete dir="temp_xsdlibsrc"/>
		<mkdir	dir="temp_xsdlibsrc"/>
		
		<!-- obtain source codes from cvs -->
		<cvs	cvsRoot="${cvsRoot}"
				package="msv/msv/src"
				command="export -d . ${cvsExportOpt}"
				dest="${stageName}/src/" />
		
		<!-- obtain source code of XSDLib -->
		<cvs	cvsRoot="${cvsRoot}"
				package="msv/xsdlib/src"
				command="export -d . ${cvsExportOpt}"
				dest="temp_xsdlibsrc" />
		
		<!-- obtain document files -->
		<cvs	cvsRoot="${cvsRoot}"
				package="msv/msv/doc"
				command="export -d . ${cvsExportOpt}"
				dest="${stageName}" />
	
		<!-- obtain examples -->
		<mkdir dir="${stageName}/examples"/>
		<cvs	cvsRoot="${cvsRoot}"
				package="msv/msv/examples"
				command="export -d . ${cvsExportOpt}"
				dest="${stageName}/examples" />
		
		<!-- compile files -->
		<javac	srcdir="${stageName}/src"
				destdir="temp">
			
			<classpath path="temp"/>
			<classpath path="${java.class.path}"/>
			<classpath path="${relaxngDatatype.jar}"/>
			<classpath path="${isorelax.jar}"/>
			<classpath path="../package/xsdlib.jar"/>
			
			<include name="**/*.java" />
		</javac>
		
		<copy file="../package/xsdlib.jar" tofile="${stageName}/xsdlib.jar" />
		<copy file="${relaxngDatatype.jar}" tofile="${stageName}/relaxngDatatype.jar" />
		<copy file="${isorelax.jar}" tofile="${stageName}/isorelax.jar" />
		<copy file="${xerces.jar}" tofile="${stageName}/xerces.jar" />
		
		<!-- create a time stamp file -->
		<echo file="temp/version.properties">version=${DSTAMP}</echo>
		
		<!-- create META-INF/services file -->
		<mkdir dir="temp/META-INF/services"/>
		<echo file="temp/META-INF/services/org.iso_relax.verifier.VerifierFactoryLoader"
			>com.sun.msv.verifier.jarv.FactoryLoaderImpl</echo>
		
		<!-- creates binary jar -->
		<jar	jarfile="${stageName}/msv.jar"
				manifest="./MANIFEST.MF"
				compress="false">
			<fileset dir="${stageName}/src" includes="**/msv/**/*.properties" />
			<fileset dir="temp" />
		</jar>
		
		<!-- copy jar file to package dir -->
		<copy file="${stageName}/msv.jar" tofile="../package/msv.jar" />
		
		<!-- creates javadoc -->
		<mkdir		dir="${stageName}/javadoc" />
		<javadoc	locale="en_US"
					packagenames="com.sun.msv.*,org.relaxng.datatype.*"
					sourcepath="${stageName}/src:${rngInterfaceSource}:temp_xsdlibsrc"
					destdir="${stageName}/javadoc"
					windowtitle="Sun Multi Schema XML Validator"
					overview="${stageName}/src/com/sun/msv/overview.html"
					author="yes"
					public="yes"
					>
			
			<classpath path="temp"/>
			<classpath path="${isorelax.jar}"/>
			<classpath path="${java.class.path}"/>
			
			<!--
				if you have encountered error around here,
				please remove all offline="true" and packagelistLoc="...".
			-->
			<link offline="true" href="http://java.sun.com/products/jdk/1.2/docs/api" packagelistLoc="ExternalPackageLists\CoreAPI" />
			<link offline="true" href="http://xml.apache.org/apiDocs/" packagelistLoc="ExternalPackageLists\XML" />
			<link offline="true" href="http://iso-relax.sourceforge.net/apiDoc/" packagelistLoc="ExternalPackageLists\ISO-RELAX" />
		</javadoc>
		<delete dir="${stageName}" includes="**/*.vsd">
			<!-- remove Visio files from release package -->
		</delete>
		
		<delete dir="temp" />
		
		<!-- compile sample files -->
		<javac	srcdir="${stageName}/examples">
			
			<classpath path="../package/msv.jar"/>
			<classpath path="../package/xsdlib.jar"/>
			<classpath path="${relaxngDatatype.jar}"/>
			<classpath path="${isorelax.jar}"/>
			<classpath path="${java.class.path}"/>
			
			<include name="**/*.java" />
		</javac>
		
		<!-- merge XSDLib source into MSV source -->
		<copy todir="${stageName}/src">
			<fileset dir="temp_xsdlibsrc"/>
		</copy>
<!-- temporarily, remove source codes -->
<!--		<delete dir="${stageName}/src" />	-->
		
		
		<!-- creates distribution package -->
		<zip	zipfile="../package/msv.${DSTAMP}.zip"
				basedir="."
				includes="${stageName}/**/*.*" />
		
		<delete dir="temp_xsdlibsrc"/>
		<delete dir="${stageName}" />
	</target>
</project>
