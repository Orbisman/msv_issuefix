#
# Tranquilo : RELAX Verifier           written by Kohsuke Kawaguchi
#                                           k-kawa@bigfoot.com
#
# Copyright 2000 Sun Microsystems, Inc. All Rights Reserved.
#
# This software is the confidential and proprietary information of Sun
# Microsystems, Inc. ("Confidential Information").  You shall not
# disclose such Confidential Information and shall use it only in
# accordance with the terms of the license agreement you entered into
# with Sun.
#
# SUN MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF
# THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
# TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
# PURPOSE, OR NON-INFRINGEMENT. SUN SHALL NOT BE LIABLE FOR ANY DAMAGES
# SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
# THIS SOFTWARE OR ITS DERIVATIVES.

BadTypeException.FacetMustBeNonNegativeInteger = \
     Facet "{0}" must be a non-negative integer value

PatternFacet.ParseError = \
	Specified pattern is invalid: {0}

InconsistentFacets.1 = \
	value of {0} facet and {1} facet is inconsistent

InconsistentFacets.2 = \
	value of {0} facet is inconsistent with that of \
	{3} facet of "{2}" type, which is used as the base type.

XAndYAreExclusive = \
    {0} facet and {1} facet are mutually exclusive

LoosenedFacet = \
    value of {0} facet is loosened compared to the same facet \
    specified in "{1}" type.

EnumerationFacet.InvalidValueForThisType = \
	the specified value "{0}" is not a/an {1}

WhiteSpaceProcessor.InvalidWhiteSpaceValue = \
	the specified value "{0}" is invalid as a whiteSpace facet value. \
	it must be preserve, replace, or collapse

RangeFacet.ExclusiveFacetsSpecified = \
	Two mutually exclusive facets ("{0}" and "{1}" ) are specified

RangeFacet.IllegalMaxMinOrder = \
	"{0}" facet and "{1}" facet have inconsistent values

RangeFacet.IllegalValueForX = \
	The specified value "{0}" is invalid for "{1}" type

PrecisionScaleFacet.PrecisionMustBePositive = \
	precision facet must be 1 or greater integer
	
PrecisionScaleFacet.ScaleMustBeNonNegative = \
	scale facet must be 0 or greater integer

PrecisionScaleFacet.ScaleIsGraterThanPrecision = \
	scale must be less or equal to precision

