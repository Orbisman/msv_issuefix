options {
	STATIC					= false;
	ERROR_REPORTING			= false;
	OPTIMIZE_TOKEN_MANAGER	= true;
	BUILD_PARSER			= true;
}
PARSER_BEGIN(AnyURIParser)

package com.sun.tranquilo.datatype;

import java.io.*;

public class AnyURIParser
{
	public static void main(String args[]) throws Exception
	{
		String s = new BufferedReader( new InputStreamReader(System.in) ).readLine();
		new AnyURIParser(new ByteArrayInputStream(s.getBytes("UTF8"))).start();
	}
}

PARSER_END(AnyURIParser)

/*
	a Uniform Resource Identifier (URI) Reference as defined in
	Section 4 of [RFC 2396], as amended by [RFC 2732]. 
	
	RFC2373, which is included by RFC2732, has an error in BNF.
	This version avoids this error by modifying IPv6address as follows.
	
	<#IPv6address	: <hexpart> ( ":" <IPv4address> )? | "::" <IPv4address>  >

	The original was

	<#IPv6address	: <hexpart> ( ":" <IPv4address> )? >
	
	But this cannot accept "::13.1.68.3"
*/
TOKEN :
{
	<#digit			: ["0"-"9"] >
|
	<#loalpha		: ["a"-"z"] >
|
	<#upalpha		: ["A"-"Z"] >
|
	<#alpha			: <loalpha> | <upalpha> >
|
	<#alphanum		: <alpha> | <digit> >
|
	<#hex			: <digit> | ["a"-"f","A"-"F"] >
|
	<#escaped		: "%" <hex> <hex> >
|
	<#mark			: "-" | "_" | "." | "!" | "~" | "*" | "'" | "(" | ")" >
|
	<#unreserved	: <alphanum> | <mark> >
|
	<#reserved		: ";" | "/" | "?" | ":" | "@" | "&" | "=" | "+" | "$" | "," | "[" | "]" >
|
	<#uric			: <reserved> | <unreserved> | <escaped> >
|
	<#fragment		: (<uric>)* >
|
	<#query			: (<uric>)* >
|
	<#pchar			: <unreserved> | <escaped> | ":" | "@" | "&" | "=" | "+" | "$" | "," >
|
	<#param			: (<pchar>)* >
|
	<#segment		: (<pchar>)* ( ";" <param> )* >
|
	<#path_segments	: <segment> ( "/" <segment> )* >
|
	<#path			: (<abs_path> | <opaque_part>)? >
|
	<#port			: (<digit>)* >
|
	<#__upTo3digit	: <digit> ( <digit> ( <digit> )? )? >
|
	<#IPv4address	: <__upTo3digit> "." <__upTo3digit> "." <__upTo3digit> "." <__upTo3digit> >
|
	<#hex4			: <hex> ( <hex> ( <hex> ( <hex> )? )? )? >
|
	<#hexseq		: <hex4> (":" <hex4> )* >
|
	<#hexpart		: <hexseq> | <hexseq> "::" (<hexseq>)? | "::" (<hexseq>)? >
|
	<#IPv6address	: <hexpart> ( ":" <IPv4address> )? | "::" <IPv4address>  >
|
	<#IPv6reference	: "[" <IPv6address> "]" >
|
	<#domainlabel	: <alphanum> | <alphanum> ( <alphanum> | "-" )* <alphanum> >
|
	<#toplabel		: <alpha> | (<alpha> ( <alphanum> | "-" )* <alphanum> ) >
|
	<#hostname		: ( <domainlabel> "." )* <toplabel> (".")? >
|
	<#host			: <hostname> | <IPv4address> | <IPv6reference> >
|
	<#hostport		: <host> (":" <port>)? >
|
	<#userinfo		: ( <unreserved> | <escaped> | ";" | ":" | "&" | "=" | "+" | "$" | "," )* >
|
	<#server		: ( (<userinfo> "@")? <hostport> )? >
|
	<#reg_name		: ( <unreserved> | <escaped> | "$" | "," | ";" | ":" | "@" | "&" | "=" | "+" )+ >
|
	<#authority		: <server> | <reg_name> >
|
	<#scheme		: <alpha> ( <alpha> | <digit> | "+" | "-" | "." )* >
|
	<#rel_segment	: ( <unreserved> | <escaped> | ";" | "@" | "&" | "=" | "+" | "$" | "," )+ >
|
	<#abs_path		: "/" <path_segments> >
|
	<#rel_path		: <rel_segment> (<abs_path>)? >
|
	<#net_path		: "//" <authority> (<abs_path>)? >
|
	<#uric_no_slash	: <unreserved> | <escaped> | ";" | "?" | ":" | "@" | "&" | "=" | "+" | "$" | "," >
|
	<#opaque_part	: <uric_no_slash> (<uric>)* >
|
	<#hier_part		: ( <net_path> | <abs_path> ) ( "?" <query> )? >
|
	<#relativeURI	: ( <net_path> | <abs_path> | <rel_path> ) ( "?" <query> )? >
|
	<#absoluteURI	: <scheme> ":" ( <hier_part> | <opaque_part> ) >
|
	<uriReference	: ( <absoluteURI> | <relativeURI> )? ( "#" <fragment> )? >
}

void start() : {}
{
	<uriReference> <EOF>
}

